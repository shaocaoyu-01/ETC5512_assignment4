read_csv(
"data/urbanization_rate(2005-2012).csv",
skip =2
)
df2 <-
read_csv(
"data/urbanization_rate(2013-2023).csv"
)
urbanization_rate <-
df1 |>
right_join(df2, by="Region")|>
slice(-1)
panel_urbanization_rate <-
urbanization_rate|>
pivot_longer(
cols = -"Region",
names_to = "Year",
values_to = "urbanization_rate")
#url = "http://www.moe.gov.cn/srcsite/A05/s3040/202412/t20241219_1167656.html"
#    "http://en.moe.gov.cn/"
Education_investment <- read_excel("data/education_investment(2001-2023).xlsx")
Education_investment<-
Education_investment |>
slice(-1)|>
rename(
Region = `...1`
)
panel_education_investment <-
Education_investment|>
mutate(
across(
.cols = -Region,
.fns  = ~ as.numeric(.),
.names = "{.col}")
) |>
pivot_longer(
cols      = -Region,
names_to  = "Year",
values_to = "Education_investment"
)
panel_education_investment <- panel_education_investment %>%
left_join(province_lookup,
by = c("Region" = "Province"))
panel_education_investment<- panel_education_investment %>%
select(-1) %>%
select(last_col(), everything())
#This data is about the degree of openness.It is the import and export volume of every province.
openness <-
read_excel("data/import_and_export_volume(1996-2023).xlsx") |>
select(-...3) |>
select(-...4) |>
rename(
Province_EN = `省份`,
Year = `年份`,
Volume =`进出口总额（亿元）`
)
# this data is about the geographic information of each province in China,
# url = https://gadm.org/download_country.html
# choose country =China， level=1.
#it is a html file and i have edited it manually.
province_location <-
read.csv(
"data/province_location.csv"
)
province_location$zone<-
trimws(province_location$zone)
panel_all <-
panel_all |>
right_join(
province_location,
by = "Region"
)
panel_all <- panel_all %>% mutate(Year = as.character(Year))
panel_industry_increase <- panel_industry_increase %>% mutate(Year = as.character(Year))
panel_growth_rate_of_fixed_asset <- panel_growth_rate_of_fixed_asset|> mutate(Year =as.character(Year))
panel_urbanization_rate <- panel_urbanization_rate |> mutate(Year = as.character(Year))
panel_education_investment <- panel_education_investment|>mutate(Year=as.character(Year))
openness <- openness|>mutate(Year =as.character(Year))
panel_all <-
left_join(
panel_all,
panel_industry_increase,
by=c("Region" = "Province_EN",
"Year" )
)
panel_all <-
left_join(
panel_all,
panel_growth_rate_of_fixed_asset,
by =c("Region"= "Province_EN",
"Year")
)
panel_all <-
left_join(
panel_all,
panel_urbanization_rate,
by =c("Region",
"Year")
)
panel_all <-
left_join(
panel_all,
panel_education_investment,
by =c("Region"= "Province_EN",
"Year")
)
panel_all <-
left_join(
panel_all,
openness,
by =c("Region"="Province_EN",
"Year")
)
View(panel_all)
panel_all <-
panel_all|>
mutate(Year =as.integer(Year))|>
arrange(Region,Year) |>
group_by(Region)|>
mutate(
GDP_lag =lag(GDP),
log_GDP_lag =log(GDP_lag),
log_GDP = log(GDP)
) |>
ungroup() |>
filter(!is.na(GDP_lag))
names(panel_all)
panel_all|>
select(GDP_growth_rate,GDP_per_capita_growth_rate,log_GDP_lag,ratio,urbanization_rate,Volume,Education_investment)|>
summary()
panel_all|>
select(GDP_growth_rate,GDP_per_capita_growth_rate,log_GDP_lag,ratio,urbanization_rate,Volume,Education_investment,growth_rate_of_fixed_asset)|>
summary()
ols_base <- lm(GDP_per_capita_growth_rate ~ log_GDP_lag
+ ratio + urbanization_rate + Volume + Education_investment + Growth_rate_of_fixed_asset,
data = panel_all %>% filter(Year==2020))
panel_all|>
select(GDP_growth_rate,GDP_per_capita_growth_rate,log_GDP_lag,ratio,urbanization_rate,Volume,Education_investment,growth_rate_of_fixed_asset)|>
summary()
ols_base <- lm(GDP_per_capita_growth_rate ~ log_GDP_lag
+ ratio + urbanization_rate + Volume + Education_investment + growth_rate_of_fixed_asset,
data = panel_all %>% filter(Year==2020))
vif(ols_base)
install.packages("olsrr")
library(olsrr)
panel_all|>
select(GDP_growth_rate,GDP_per_capita_growth_rate,log_GDP_lag,ratio,urbanization_rate,Volume,Education_investment,growth_rate_of_fixed_asset)|>
summary()
ols_base <- lm(GDP_per_capita_growth_rate ~ log_GDP_lag
+ ratio + urbanization_rate + Volume + Education_investment + growth_rate_of_fixed_asset,
data = panel_all %>% filter(Year==2020))
vif(ols_base)
library(olsrr)
panel_all|>
select(GDP_growth_rate,GDP_per_capita_growth_rate,log_GDP_lag,ratio,urbanization_rate,Volume,Education_investment,growth_rate_of_fixed_asset)|>
summary()
ols_base <- lm(GDP_per_capita_growth_rate ~ log_GDP_lag
+ ratio + urbanization_rate + Volume + Education_investment + growth_rate_of_fixed_asset,
data = panel_all %>% filter(Year==2020))
vif(ols_base)
library(olsrr)
library(car)
panel_all|>
select(GDP_growth_rate,GDP_per_capita_growth_rate,log_GDP_lag,ratio,urbanization_rate,Volume,Education_investment,growth_rate_of_fixed_asset)|>
summary()
ols_base <- lm(GDP_per_capita_growth_rate ~ log_GDP_lag
+ ratio + urbanization_rate + Volume + Education_investment + growth_rate_of_fixed_asset,
data = panel_all %>% filter(Year==2020))
vif(ols_base)
panel_all <- panel_all|>
mutate(
Edu_share = Education_investment/GDP,
Trade_share = Volume/GDP
)
panel_all|>
select(GDP_growth_rate,GDP_per_capita_growth_rate,log_GDP_lag,ratio,urbanization_rate,Trade_share,Edu_share,growth_rate_of_fixed_asset)|>
summary()
ols_base <- lm(GDP_per_capita_growth_rate ~ log_GDP_lag
+ ratio + urbanization_rate + Trade_share + Edu_share + growth_rate_of_fixed_asset,
data = panel_all %>% filter(Year==2020))
vif(ols_base)
df20 <- panel_all %>% filter(Year == 2020)
# 1. Absolute β convergence
lm1 <- lm(GDP_per_capita_rate_growth_rate ~ log_GDP_lag, data = df20)
df20 <- panel_all %>% filter(Year == 2020)
# 1. Absolute β convergence
lm1 <- lm(GDP_per_capita_growth_rate ~ log_GDP_lag, data = df20)
summary(lm1)
# 2. Conditional β convergence
lm2 <- lm(GDP_per_capita_growth_rate  ~ log_GDP_lag
ratio+
df20 <- panel_all %>% filter(Year == 2020)
# 1. Absolute β convergence
lm1 <- lm(GDP_per_capita_growth_rate ~ log_GDP_lag, data = df20)
summary(lm1)
# 2. Conditional β convergence
lm2 <- lm(GDP_per_capita_growth_rate  ~ log_GDP_lag+
ratio+
urbanization_rate+
Trade_share+
Edu_share+
growth_rate_of_fixed_asset,
data = df20)
summary(lm2)
tidy(lm2) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) +
geom_point() +
geom_errorbarh(aes(xmin=estimate-1.96*std.error,
xmax=estimate+1.96*std.error),
height=0.2) +
labs(title="Conditional beta convergence regression coefficients for 2020",
x="Coefficient estimates", y="variable") +
theme_minimal()
install.packages("broom")
library(broom)
tidy(lm2) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = term)) +
geom_point() +
geom_errorbarh(aes(xmin=estimate-1.96*std.error,
xmax=estimate+1.96*std.error),
height=0.2) +
labs(title="Conditional beta convergence regression coefficients for 2020",
x="Coefficient estimates", y="variable") +
theme_minimal()
pdata <- pdata.frame(panel_all, index = c("Region","Year"))
install.packages("plm")
install.packages("plm")
library(plm)
pdata <- pdata.frame(panel_all, index = c("Region","Year"))
fe_mod <- plm(GDP_growth ~ log_GDP_lag+
ratio+
urbanization_rate+
Trade_share+
Edu_share+
growth_rate_of_fixed_asset,
data   = pdata,
model  = "within",
effect = "twoways")
pdata <- pdata.frame(panel_all, index = c("Region","Year"))
fe_mod <- plm(GDP_per_capita_growth_rate ~ log_GDP_lag+
ratio+
urbanization_rate+
Trade_share+
Edu_share+
growth_rate_of_fixed_asset,
data   = pdata,
model  = "within",
effect = "twoways")
summary(fe_mod)
tidy(fe_mod, conf.int = TRUE) %>%
filter(term != "Intercept")
coeftest(fe_mod, vcov = vcovHC(fe_mod, type="HC1"))
install.packages(c("lmtest", "sandwich"))
knitr::opts_chunk$set(echo = TRUE)
library(lmtest)
library(sandwich)
coeftest(fe_mod, vcov = vcovHC(fe_mod, type="HC1"))
sigma_df <- panel_all %>%
group_by(Year) %>%
summarize(sd_logGDP = sd(log_GDP, na.rm=TRUE))
sigma_df <- panel_all %>%
group_by(Year) %>%
summarize(sd_logGDP = sd(log_GDP, na.rm=TRUE))
library(dplyr)
sigma_df <- panel_all %>%
group_by(Year) %>%
summarize(sd_logGDP = sd(log_GDP, na.rm=TRUE))
ggplot(sigma_df, aes(x=Year,y=sd_logGDP)) +
geom_line(size=1) +
labs(title="The standard deviation of the logarithmic GDP of each province changes with the year",
x="Year", y="sd") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
eval = FALSE)
library(tidyverse)
library(here)
library(sf)
library(patchwork)
library(readr)
library(rvest)
library(stringr)
library(dplyr)
library(tidyr)
library(readxl)
library(tibble)
library(ggpmisc)
library(ggplot2)
library(viridis)
library(gganimate)
library(car)
library(olsrr)
library(broom)
library(plm)
library(lmtest)
library(sandwich)
sigma_df <- panel_all %>%
group_by(Year) %>%
summarize(sd_logGDP = sd(log_GDP, na.rm=TRUE))
ggplot(sigma_df, aes(x=Year,y=sd_logGDP)) +
geom_line(size=1) +
labs(title="The standard deviation of the logarithmic GDP of each province changes with the year",
x="Year", y="sd") +
theme_minimal()
# 1. We extract a year's data, like 2020.
df2020 <- panel_all %>%
arrange(Region, Year) %>%
group_by(Region) %>%
mutate(gdp_lag = lag(GDP)) %>%
ungroup()
# 2. Draw a plot
p1 <- ggplot(df2020, aes(x = log(gdp_lag), y = GDP_growth_rate, color = zone)) +
geom_point(size = 3, alpha = 0.8) +
stat_smooth(method = "lm", se = FALSE, linetype = "dashed") +
# Add a linear regression line
stat_poly_eq(
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
formula = y ~ x, parse = TRUE, size = 3
) +
scale_color_brewer(type = "qual", palette = "Set1") +
labs(
title = "in 2020 the last year's GDP vs GDP growth rate for the year",
x = "Logarithm of GDP in the previous year",
y = "Year-on-year GDP growth rate (%)",
color = "zone"
) +
theme_minimal(base_size = 14)
print(p1)
library(tidyr)
library(ggplot2)
# 1. calculate the average number of the whole country
national_avg <- panel_all %>%
group_by(Year) %>%
summarize(
gdp_avg = mean(GDP, na.rm = TRUE),
gdp_pc_avg = mean(GDP_per_capita, na.rm = TRUE)
)
# 2. extract some typical provinces to make a sample
provs <- c("Guangdong", "Beijing", "Guizhou", "Yunnan")
df_sub <- panel_all %>% filter(Region %in% provs)
# 3. Combine provincial data and national average into the same long format
df_plot <- bind_rows(
df_sub %>% select(Region, Year, value = GDP) %>% mutate(type = Region),
national_avg %>% select(Year, value = gdp_avg) %>% mutate(province = "National", type = "National")
)
# 4. 绘图
p2 <- ggplot(df_plot, aes(x = Year, y = value, color = type)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "Time series comparison of GDP of typical provinces",
x = "Year",
y = "GDP(100 million)",
color = ""
) +
scale_color_manual(values = c("National" = "black", "Guangdong" = "#1b9e77",
"Beijing" = "#d95f02", "Guizhou" = "#7570b3", "Yunnan" = "#e7298a")) +
theme_minimal(base_size = 14)  +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
print(p2)
# 1. We extract a year's data, like 2020.
df2020 <- panel_all %>%
arrange(Region, Year) %>%
group_by(Region) %>%
mutate(gdp_lag = lag(GDP)) %>%
ungroup()
# 2. Draw a plot
p1 <- ggplot(df2020, aes(x = log(gdp_lag), y = GDP_per_capita_growth_rate, color = zone)) +
geom_point(size = 3, alpha = 0.8) +
stat_smooth(method = "lm", se = FALSE, linetype = "dashed") +
# Add a linear regression line
stat_poly_eq(
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
formula = y ~ x, parse = TRUE, size = 3
) +
scale_color_brewer(type = "qual", palette = "Set1") +
labs(
title = "in 2020 the last year's GDP vs GDP growth rate for the year",
x = "Logarithm of GDP in the previous year",
y = "Year-on-year GDP growth rate (%)",
color = "zone"
) +
theme_minimal(base_size = 14)
print(p1)
library(tidyr)
library(ggplot2)
# 1. calculate the average number of the whole country
national_avg <- panel_all %>%
group_by(Year) %>%
summarize(
gdp_avg = mean(GDP, na.rm = TRUE),
gdp_pc_avg = mean(GDP_per_capita, na.rm = TRUE)
)
# 2. extract some typical provinces to make a sample
provs <- c("Guangdong", "Beijing", "Guizhou", "Liaoning")
df_sub <- panel_all %>% filter(Region %in% provs)
# 3. Combine provincial data and national average into the same long format
df_plot <- bind_rows(
df_sub %>% select(Region, Year, value = GDP) %>% mutate(type = Region),
national_avg %>% select(Year, value = gdp_avg) %>% mutate(province = "National", type = "National")
)
# 4. 绘图
p2 <- ggplot(df_plot, aes(x = Year, y = value, color = type)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "Time series comparison of GDP of typical provinces",
x = "Year",
y = "GDP(100 million)",
color = ""
) +
scale_color_manual(values = c("National" = "black", "Guangdong" = "#1b9e77",
"Beijing" = "#d95f02", "Guizhou" = "#7570b3", "Liaoning" = "#e7298a")) +
theme_minimal(base_size = 14)  +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
print(p2)
library(tidyr)
library(ggplot2)
# 1. calculate the average number of the whole country
national_avg <- panel_all %>%
group_by(Year) %>%
summarize(
gdp_avg = mean(GDP, na.rm = TRUE),
gdp_pc_avg = mean(GDP_per_capita, na.rm = TRUE)
)
# 2. extract some typical provinces to make a sample
provs <- c("Guangdong", "Beijing", "Guizhou", "Liaoning")
df_sub <- panel_all %>% filter(Region %in% provs)
# 3. Combine provincial data and national average into the same long format
df_plot <- bind_rows(
df_sub %>% select(Region, Year, value = GDP_per_capita) %>% mutate(type = Region),
national_avg %>% select(Year, value = gdp_pc_avg) %>% mutate(province = "National", type = "National")
)
# 4. draw plots
p2 <- ggplot(df_plot, aes(x = Year, y = value, color = type)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "Time series comparison of GDP of typical provinces",
x = "Year",
y = "GDP_per_capita(100 million)",
color = ""
) +
scale_color_manual(values = c("National" = "black", "Guangdong" = "#1b9e77",
"Beijing" = "#d95f02", "Guizhou" = "#7570b3", "Liaoning" = "#e7298a")) +
theme_minimal(base_size = 14)  +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
print(p2)
library(tidyr)
library(ggplot2)
# 1. calculate the average number of the whole country
national_avg <- panel_all %>%
group_by(Year) %>%
summarize(
gdp_avg = mean(GDP, na.rm = TRUE),
gdp_pc_avg = mean(GDP_per_capita, na.rm = TRUE)
)
# 2. extract some typical provinces to make a sample
provs <- c("Guangdong", "Beijing", "Guizhou", "Liaoning")
df_sub <- panel_all %>% filter(Region %in% provs)
# 3. Combine provincial data and national average into the same long format
df_plot <- bind_rows(
df_sub %>% select(Region, Year, value = GDP_per_capita) %>% mutate(type = Region),
national_avg %>% select(Year, value = gdp_pc_avg) %>% mutate(province = "National", type = "National")
)
# 4. draw plots
p2 <- ggplot(df_plot, aes(x = Year, y = value, color = type)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "Time series comparison of GDP of typical provinces",
x = "Year",
y = "GDP_per_capita(10 thousand Yuan)",
color = ""
) +
scale_color_manual(values = c("National" = "black", "Guangdong" = "#1b9e77",
"Beijing" = "#d95f02", "Guizhou" = "#7570b3", "Liaoning" = "#e7298a")) +
theme_minimal(base_size = 14)  +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
)
print(p2)
library(ineq)
sigma_df <- panel_all %>%
group_by(Year) %>%
summarize(
sd_log_gdp = sd(log(GDP), na.rm = TRUE),
cv_gdp = sd(GDP, na.rm = TRUE) / mean(GDP, na.rm = TRUE),
theil_gdp = Theil(GDP)
) %>%
pivot_longer(-Year, names_to = "metric", values_to = "value")
sigma_df <- sigma_df %>%
mutate(Year = as.numeric(as.character(Year)))
p3 <- ggplot(sigma_df, aes(x = Year, y = value)) +
geom_line(size = 1) +
facet_wrap(~ metric, scales = "free_y", ncol = 1, strip.position = "right") +
labs(
title = "Provincial GDP dispersion index changes by year",
x = "Year",
y = "Index value"
) +
theme_minimal(base_size = 14)
print(p3)
